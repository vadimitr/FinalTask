{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯДобавляюПользователяИБСРолью(Парам01,Парам02)"",""ЯДобавляюПользователяИБСРолью"",""Дано Я добавляю пользователя ИБ """"Оператор"""" с ролью """"Оператор"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗагружаюФикстуры(Парам01)"",""ЯЗагружаюФикстуры"",""Дано Я загружаю фикстуры """"Номенклатура"""""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаКлиенте
Функция ПолучитьПутьКФайлуОтносительноКаталогаФичи(ИмяФайлаСРасширением)
	
	ПутьКФайлу = """";
	
	СостояниеВанесса = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	ПутьКТекущемуФичаФайлу = СостояниеВанесса.ТекущаяФича.ПолныйПуть;
	
	ПутьКФайлу = Лев(ПутьКТекущемуФичаФайлу, СтрНайти(ПутьКТекущемуФичаФайлу, ""features"") - 1) + ИмяФайлаСРасширением;
	
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	Ванесса.ЗапретитьВыполнениеШагов();	

	Адрес = """";
	НачальноеИмяФайла = ПолучитьПутьКФайлуОтносительноКаталогаФичи(""tools\Выгрузка и загрузка данных XML.epf"");
	НачатьПомещениеФайла(Новый ОписаниеОповещения(""ЗагрузитьFixtureИзМакетаЗавершение"", ЭтотОбъект, ИмяМакета), Адрес, НачальноеИмяФайла, Ложь);
	
КонецПроцедуры // ЗагрузитьФикстурыИзМакета()

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакетаЗавершение(Результат, Адрес, ИмяФайла, ИмяМакета) Экспорт

	ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета);
	
	Ванесса.ПродолжитьВыполнениеШагов();

КонецПроцедуры // ЗагрузитьFixtureИзМакетаЗавершение()

&НаСервере
Процедура ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета)

	//1
	ИмяВременногоФайла1 = ПолучитьИмяВременногоФайла();
	
	ДД = ПолучитьИзВременногоХранилища(Адрес);
	ДД.Записать(ИмяВременногоФайла1);
	ВО = ВнешниеОбработки.Создать(ИмяВременногоФайла1, Ложь);
	
	//2
	ИмяВременногоФайла2 = ПолучитьИмяВременногоФайла();
	
	Текст = РеквизитФормыВЗначение(""Объект"").ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	ТД = Новый ТекстовыйДокумент;
	ТД.УстановитьТекст(Текст);
	ТД.Записать(ИмяВременногоФайла2, КодировкаТекста.UTF8);
	
	ВО.ВыполнитьЗагрузку(ИмяВременногоФайла2);
	
	Файл = Новый Файл(ИмяВременногоФайла1);
	Если Файл.Существует() Тогда
		УдалитьФайлы(ИмяВременногоФайла1);
	КонецЕсли;
	Файл = Новый Файл(ИмяВременногоФайла2);
	Если Файл.Существует() Тогда
		УдалитьФайлы(ИмяВременногоФайла2);
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьFixtureИзМакетаЗавершение()

&НаСервере
Функция ПользовательИБДобавленНаСервере(Знач ИмяПользователя, Знач ИмяРоли)
	
	Если Не ПравоДоступа(""Администрирование"", Метаданные) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ""У текущего пользователя не достаточно прав для создание пользователей ИБ!"";
		Сообщение.Сообщить(); 
		Возврат Ложь;
	КонецЕсли;
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	
	Если ПользовательИБ = Неопределено Тогда
		Попытка
			ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
			ПользовательИБ.Имя = ИмяПользователя;
			ПользовательИБ.ПоказыватьВСпискеВыбора = Истина;
			ПользовательИБ.Роли.Добавить(Метаданные.Роли[ИмяРоли]);
			ПользовательИБ.Записать();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано Я добавляю пользователя ИБ ""Оператор"" с ролью ""Оператор""
//@ЯДобавляюПользователяИБСРолью(Парам01,Парам02)
Процедура ЯДобавляюПользователяИБСРолью(ИмяПользователя,ИмяРоли) Экспорт

	Если НЕ ПользовательИБДобавленНаСервере(ИмяПользователя,ИмяРоли) Тогда
		ВызватьИсключение ""Пользователь ИБ "" + ИмяПользователя + "" не создан!"";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//Дано Я загружаю фикстуры ""Номенклатура""
//@ЯЗагружаюФикстуры(Парам01)
Процедура ЯЗагружаюФикстуры(ИмяМакета) Экспорт
	ЗагрузитьFixtureИзМакета(ИмяМакета);
КонецПроцедуры

//окончание текста модуля",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}