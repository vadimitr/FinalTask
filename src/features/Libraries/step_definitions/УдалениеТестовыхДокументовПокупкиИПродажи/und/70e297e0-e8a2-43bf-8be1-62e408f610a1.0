{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетДокументПокупкиСКомментарием(КомментарийДокумента)"",""СуществуетДокументПокупкиСКомментарием"",""Допустим существует документ покупки с комментарием """"#тестовый документ"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СНомеромДокумента(НомерДокумента)"",""СНомеромДокумента"",""И с номером документа """"000000001"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетДокументПродажиСКомментарием(КомментарийДокумента)"",""СуществуетДокументПродажиСКомментарием"",""Допустим существует документ продажи с комментарием """"#тестовый документ"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетДокументПокупкиСКомментарием(Парам01)"",""СуществуетДокументПокупкиСКомментарием"",""Допустим существует документ покупки с комментарием """"#тестовый документ"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СНомеромДокумента(Парам01)"",""СНомеромДокумента"",""И с номером документа """"000000001"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""УДокументаПокупкиПометкаУдалениеДолжнаСтатьИстина()"",""УДокументаПокупкиПометкаУдалениеДолжнаСтатьИстина"",""Тогда у документа покупки пометка удаление должна стать Истина"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетДокументПродажиСКомментарием(Парам01)"",""СуществуетДокументПродажиСКомментарием"",""Допустим существует документ продажи с комментарием """"#тестовый документ"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""СКонтрагентом(Парам01)"",""СКонтрагентом"",""И с Контрагентом """"ООО Новый"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""УДокументаПродажиПометкаУдалениеДолжнаСтатьИстина()"",""УДокументаПродажиПометкаУдалениеДолжнаСтатьИстина"",""Тогда у документа продажи пометка удаление должна стать Истина"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаСервере
Функция УстановитьПометкуУдаленияДокумента(ТипДокумента, НомерДокумента, КомментарийДокумента = ""#тестовый документ"") Экспорт
	Запрос = Новый Запрос(""ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК ДокументСсылка,
	|	ТаблицаДокументов.ПометкаУдаления КАК ЗначениеПометкиУдаления
	|ИЗ
	|	Документ.""+ ТипДокумента +""  КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Номер = &НомерДокумента
	|	И ТаблицаДокументов.Комментарий = &КомментарийДокумента"");
	
	Запрос.УстановитьПараметр(""НомерДокумента"", СокрЛП(НомерДокумента));
	Запрос.УстановитьПараметр(""КомментарийДокумента"", СокрЛП(КомментарийДокумента));
	Результат = Запрос.Выполнить();	
	Если Результат.Пустой() Тогда
		ВызватьИсключение  ТипДокумента + "" "" + НомерДокумента + "" не найден"";
	КонецЕсли;		
	
	Выборка = Результат.Выбрать();
	//Выборка.Следующий();
	//ЗначениеПометкиУдаления = Ложь;	
	Пока Выборка.Следующий() Цикл
		ЗначениеПометкиУдаления = Выборка.ЗначениеПометкиУдаления;	
		Если Не ЗначениеПометкиУдаления Тогда	
			ДокОбъект = Выборка.ДокументСсылка.ПолучитьОбъект();       
			//Попытка
				ДокОбъект.УстановитьПометкуУдаления(Истина);
				ЗначениеПометкиУдаления = Истина;
				ВызватьИсключение ОписаниеОшибки();
			//Исключение
			//КонецПопытки;		
		КонецЕсли;			
	КонецЦикла;
	
	Возврат ЗначениеПометкиУдаления;
КонецФункции


///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим существует документ покупки с комментарием ""#тестовый документ""
//@СуществуетДокументПокупкиСКомментарием(Парам01)
Процедура СуществуетДокументПокупкиСКомментарием(КомментарийДокумента) Экспорт
	Контекст.Вставить(""КомментарийДокумента"", КомментарийДокумента);
	Контекст.Вставить(""ТипДокумента"", ""ПоступлениеТоваровУслуг"");
	Ванесса.ПосмотретьЗначение(КомментарийДокумента,Истина);
КонецПроцедуры

&НаКлиенте
//И с номером документа ""000000001""
//@СНомеромДокумента(Парам01)
Процедура СНомеромДокумента(НомерДокумента) Экспорт
	Контекст.Вставить(""НомерДокумента"", НомерДокумента);
	Ванесса.ПосмотретьЗначение(НомерДокумента,Истина);
КонецПроцедуры

&НаКлиенте
//Тогда у документа покупки пометка удаление должна стать Истина
//@УДокументаПокупкиПометкаУдалениеДолжнаСтатьИстина()
Процедура УДокументаПокупкиПометкаУдалениеДолжнаСтатьИстина() Экспорт
	Результат = УстановитьПометкуУдаленияДокумента(Контекст.ТипДокумента, Контекст.НомерДокумента, Контекст.КомментарийДокумента);
	Ванесса.ПосмотретьЗначение(Результат,Истина);
	Если Не Результат Тогда
		ВызватьИсключение  ""Для документа "" + Контекст.ТипДокумента +"" "" + Контекст.НомерДокумента + "" не удалось установить пометку удаления"";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//Допустим существует документ продажи с комментарием ""#тестовый документ""
//@СуществуетДокументПродажиСКомментарием(Парам01)
Процедура СуществуетДокументПродажиСКомментарием(КомментарийДокумента) Экспорт
 	Контекст.Вставить(""КомментарийДокумента"", КомментарийДокумента);
	Контекст.Вставить(""ТипДокумента"", ""РеализацияТоваровУслуг"");
	Ванесса.ПосмотретьЗначение(КомментарийДокумента,Истина);
КонецПроцедуры

&НаКлиенте
//Тогда у документа продажи пометка удаление должна стать Истина
//@УДокументаПродажиПометкаУдалениеДолжнаСтатьИстина()
Процедура УДокументаПродажиПометкаУдалениеДолжнаСтатьИстина() Экспорт
	Результат = УстановитьПометкуУдаленияДокумента(Контекст.ТипДокумента, Контекст.НомерДокумента, Контекст.КомментарийДокумента);
	Ванесса.ПосмотретьЗначение(Результат,Истина);
	Если Не Результат Тогда
		ВызватьИсключение  ""Для документа "" + Контекст.ТипДокумента +"" "" + Контекст.НомерДокумента + "" не удалось установить пометку удаления"";
	КонецЕсли;
КонецПроцедуры

//окончание текста модуля

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}